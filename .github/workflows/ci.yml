name: Build, Test, and Deploy to Azure Web App (Container)

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  # id-token: write   # only needed if you switch to OIDC later

env:
  APP_PORT: 3000
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/frontendapp-node
  AZURE_RESOURCE_GROUP: shadahaddad-web-labs-rg     # <<< fixed
  AZURE_WEBAPP_NAME: frontendapp-web-20644          # <<< fixed

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests (if present)
        run: npm test --if-present

      - name: Build (optional)
        run: npm run build 2>/dev/null || echo "No build step; continuing."

      - name: Azure Login (Service Principal via creds JSON)
        uses: azure/login@v2
        with:
          auth-type: SERVICE_PRINCIPAL
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # AZURE_CREDENTIALS JSON: {"clientId":"...","clientSecret":"...","tenantId":"...","subscriptionId":"..."}

      - name: Verify RG & WebApp exist (guard)
        run: |
          echo "Subscription in use:" && az account show -o table
          az group show -n "${{ env.AZURE_RESOURCE_GROUP }}" -o table
          az webapp show -g "${{ env.AZURE_RESOURCE_GROUP }}" -n "${{ env.AZURE_WEBAPP_NAME }}" -o table

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.sha }}
            ${{ env.IMAGE_NAME }}:latest

      - name: Configure Web App app settings
        run: |
          # Port Kudu reads for single-container Linux
          az webapp config appsettings set \
            -g "${{ env.AZURE_RESOURCE_GROUP }}" \
            -n "${{ env.AZURE_WEBAPP_NAME }}" \
            --settings WEBSITES_PORT=${{ env.APP_PORT }} \
                       DOCKER_REGISTRY_SERVER_URL=https://index.docker.io/v1/

          # For PRIVATE Docker Hub repos, also set pull credentials:
          if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
            az webapp config appsettings set \
              -g "${{ env.AZURE_RESOURCE_GROUP }}" \
              -n "${{ env.AZURE_WEBAPP_NAME }}" \
              --settings DOCKER_REGISTRY_SERVER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} \
                         DOCKER_REGISTRY_SERVER_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }}
          fi

      - name: Point Web App at the new image tag
        run: |
          az webapp config container set \
            -g "${{ env.AZURE_RESOURCE_GROUP }}" \
            -n "${{ env.AZURE_WEBAPP_NAME }}" \
            --container-image-name "${{ env.IMAGE_NAME }}:${{ github.sha }}" \
            --container-registry-url "https://index.docker.io"

          az webapp restart -g "${{ env.AZURE_RESOURCE_GROUP }}" -n "${{ env.AZURE_WEBAPP_NAME }}"
