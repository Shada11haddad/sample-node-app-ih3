name: Build, Test, and Deploy to Azure Container Apps

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  # id-token: write   # only if you switch to OIDC later

env:
  APP_PORT: 3000
  DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/frontendapp-node:${{ github.sha }}
  AZURE_RG: container-labs-rg
  ACA_ENV_NAME: aca-env
  AZURE_LOCATION: westeurope
  ACA_APP_NAME: frontendapp

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests (if present)
        run: npm test --if-present

      - name: Build (optional)
        run: npm run build 2>/dev/null || echo "No build step; continuing."

      # ---- FIXED: use creds JSON with v2 ----
      - name: Azure Login (Service Principal via creds JSON)
        uses: azure/login@v2
        with:
          auth-type: SERVICE_PRINCIPAL
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # AZURE_CREDENTIALS contents:
          # {"clientId":"...","clientSecret":"...","tenantId":"...","subscriptionId":"..."}

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/frontendapp-node:${{ github.sha }}
            ${{ secrets.DOCKERHUB_USERNAME }}/frontendapp-node:latest

      # Deploy to Azure Container Apps (creates env/app if needed)
      - name: Deploy to ACA
        uses: azure/container-apps-deploy-action@v2
        with:
          # Source / Docker
          appSourcePath: ${{ github.workspace }}
          registryUrl: docker.io
          registryUsername: ${{ secrets.DOCKERHUB_USERNAME }}
          registryPassword: ${{ secrets.DOCKERHUB_TOKEN }}
          imageToBuild: ${{ env.DOCKER_IMAGE }}

          # Azure targets
          resourceGroup: ${{ env.AZURE_RG }}
          environmentName: ${{ env.ACA_ENV_NAME }}
          location: ${{ env.AZURE_LOCATION }}
          containerAppName: ${{ env.ACA_APP_NAME }}

          # Networking & scale
          ingress: external
          targetPort: ${{ env.APP_PORT }}
          cpu: 0.25
          memory: 0.5Gi
          minReplicas: 1
          maxReplicas: 3

          # App env (add yours as needed)
          envVars: |
            NODE_ENV=production
